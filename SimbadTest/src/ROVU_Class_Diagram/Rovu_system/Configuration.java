// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package ROVU_Class_Diagram.Rovu_system;
import simbad.gui.*;
import simbad.sim.*;

import javax.vecmath.Color3f;
import javax.vecmath.Vector3d;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.vecmath.Color3f;
import javax.vecmath.Vector3d;
import javax.vecmath.Vector3f;

import simbad.sim.Box;
import simbad.sim.EnvironmentDescription;
import simbad.sim.Wall;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import ROVU_Class_Diagram.Rovu_system.CentralStation;
import ROVU_Class_Diagram.Rovu_system.ObstacleFactory;
import javafx.scene.control.ComboBox;
import nl.vu.cs.s2.simbadtest.ExampleRobot;

/************************************************************/
/**
 * 
 */
public class Configuration implements ActionListener{

	public Environment environment;

	private JFrame frame;
	private JPanel panel;
	JComboBox<Integer> boxes;
	JComboBox<Integer> robots;


	public void init() {
		frame = new JFrame("ROVU System");
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(500, 500);
		frame.setLocation(800,300);

		GridLayout layout = new GridLayout(3, 2); 
		layout.setVgap(20);
		layout.setHgap(80);
		panel = new JPanel(layout);
		panel.setBorder(new EmptyBorder(10, 10, 10, 10));

		JLabel boxesLabel = new JLabel("Number of boxes");
		JLabel robotsLabel = new JLabel("Number of robots");

		boxes = new JComboBox<>(new Integer[] {0, 1, 2, 3, 4});
		robots = new JComboBox<>(new Integer[] {1, 2, 3, 4});
		JButton start = new JButton("Start");
		JButton stop = new JButton("Stop");
		start.addActionListener(this);
		stop.addActionListener(this);

		panel.add(boxesLabel);
		panel.add(boxes);
		panel.add(robotsLabel);
		panel.add(robots);
		panel.add(start);
		panel.add(stop);

		frame.add(panel);
		frame.pack();
		frame.setVisible(true);
	}
	
	private void createDirectory() {
		File directory = new File("images");
		if(!directory.exists()) {
			System.out.println("creating directory: " + directory.getName());
			boolean result = false;
			
			try {
				directory.mkdir();
				result = true;
			}catch(SecurityException e) {
				System.out.println(e);
			}
			if(result) {
				System.out.println("Directory created");
			}
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getActionCommand().equals("Start")){
			createDirectory();
			
			int nOfBoxes = boxes.getSelectedIndex();
			int nOfRobots = robots.getSelectedIndex();
			// request antialising so that diagonal lines are not "stairy"
			System.setProperty("j3d.implicitAntialiasing", "true");

			environment = new Environment(0, nOfBoxes, nOfRobots);

			Simbad simframe = new Simbad(environment, false);
			simframe.update(simframe.getGraphics());
			environment.rotateForStartingPosition();
			environment.station.start();

		} else if(e.getActionCommand().equals("Stop")) {
			frame.dispose();
			System.exit(0);
		} 
	}
};
